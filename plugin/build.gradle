
plugins {
    id 'java-gradle-plugin'
}

// version '1.0'

repositories {
    mavenCentral()
    google()
    jcenter()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation("com.android.tools.build:gradle:3.2.1");
    implementation("com.android.tools.build:gradle-api:3.2.1")
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'LearngradlepluginPlugin'
            implementationClass = 'org.example.LearngradlepluginPlugin'
        }
    }
}










// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)
configurations.functionalTestRuntimeOnly.extendsFrom(configurations.testRuntimeOnly)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use JUnit Jupiter for unit tests.
    useJUnitPlatform()
}
